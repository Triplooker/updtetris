#!/bin/bash

download_node() {
  echo "–ù–∞—á–∏–Ω–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É –Ω–æ–¥—ã —á–µ—Ä–µ–∑ Docker..."

  # –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
  echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
  sudo apt-get remove docker docker-engine docker.io containerd runc || true
  sudo apt-get update
  sudo apt-get install -y \
    ca-certificates \
    curl \
    gnupg \
    wget \
    jq
  
  sudo install -m 0755 -d /etc/apt/keyrings
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  sudo chmod a+r /etc/apt/keyrings/docker.gpg

  echo \
    "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
    "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

  sudo apt-get update
  sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

  # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ infera
  wget -O infera "https://drive.google.com/uc?id=1VSeI8cXojdh78H557SQJ9LfnnaS96DT-&export=download&confirm=yes"
  chmod +x infera

  # –°–æ–∑–¥–∞–Ω–∏–µ Dockerfile
  cat <<EOF > Dockerfile
FROM ubuntu:24.04
RUN apt-get update && apt-get install -y \
    curl git nano make gcc build-essential jq screen \
    ca-certificates gcc unzip lz4 wget bison software-properties-common \
    && apt-get clean
COPY infera /usr/local/bin/infera
RUN chmod +x /usr/local/bin/infera
CMD ["infera"]
EOF

  # –°–±–æ—Ä–∫–∞ Docker-–æ–±—Ä–∞–∑–∞
  docker build -t infera-node .

  # –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º network=host
  docker run -d --name infera-node --network="host" --restart unless-stopped infera-node

  echo "–ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏ –∑–∞–ø—É—â–µ–Ω–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ Docker!"
}

check_points() {
  total_points=$(curl -s http://localhost:11025/points | jq)
  echo -e "–£ –≤–∞—Å —Å—Ç–æ–ª—å–∫–æ –ø–æ–∏–Ω—Ç–æ–≤: $total_points"
}

watch_secrets() {
  curl -s http://localhost:11025/node_details | jq
}

check_logs() {
  docker logs --tail 100 infera-node
}

restart_node() {
  echo "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é –Ω–æ–¥—É..."
  docker restart infera-node
  echo "–ù–æ–¥–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞."
}

setup_auto_restart() {
  echo "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–æ–¥—ã –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞..."
  (crontab -l 2>/dev/null; echo "0 */2 * * * docker restart infera-node >> /root/node_restart.log 2>&1") | crontab -
  echo "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
  echo "üïê –ù–æ–¥–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞"
  echo "üìù –õ–æ–≥–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ /root/node_restart.log"
}

disable_auto_restart() {
  echo "–û—Ç–∫–ª—é—á–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫..."
  crontab -l | grep -v "docker restart infera-node" | crontab -
  echo "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –æ—Ç–∫–ª—é—á–µ–Ω"
}

link_and_downgrade() {
  echo "üîÑ –ü–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π:"
  echo "1. –°–æ—Ö—Ä–∞–Ω–∏–º —Ç–µ–∫—É—â–∏–µ —Ä–∞–±–æ—á–∏–µ –∫–ª—é—á–∏"
  echo "2. –û–±–Ω–æ–≤–∏–º—Å—è –¥–æ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ –∫–ª—é—á–∏"
  echo "3. –ü—Ä–∏–≤—è–∂–µ–º –Ω–æ–¥—É –∫ –∞–∫–∫–∞—É–Ω—Ç—É"
  echo "4. –í–µ—Ä–Ω–µ–º—Å—è –Ω–∞ —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é —Å —Ç–µ–º–∏ –∂–µ –∫–ª—é—á–∞–º–∏"
  echo -e "\n"
  
  read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): " confirm
  if [[ "$confirm" != "y" ]]; then
    echo "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
    return
  fi

  # –®–∞–≥ 1: –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ —Ä–∞–±–æ—á–∏–µ –∫–ª—é—á–∏
  echo "üì¶ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –∫–ª—é—á–∏..."
  rm -rf node_backup
  mkdir -p node_backup
  docker cp infera-node:/root/.local/share/node_info/. node_backup/
  
  echo "üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–µ–∫—É—â–∏–µ –∫–ª—é—á–∏:"
  cat node_backup/node_file.txt
  read -p "–ö–ª—é—á–∏ –≤–µ—Ä–Ω—ã–µ? (y/n): " confirm_keys
  if [[ "$confirm_keys" != "y" ]]; then
    echo "‚ùå –û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏"
    rm -rf node_backup
    return 1
  fi

  # –®–∞–≥ 2: –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ —Å —Ç–µ–º–∏ –∂–µ –∫–ª—é—á–∞–º–∏
  echo "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏..."
  docker stop infera-node
  docker rm infera-node
  docker rmi infera-node
  
  wget -O infera_node https://inferabuilds.s3.us-east-1.amazonaws.com/0.0.3_infera_build_linux
  chmod +x infera_node
  
  # –°–æ–∑–¥–∞–µ–º Dockerfile –¥–ª—è –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –∫–ª—é—á–∞–º–∏
  cat <<EOF > Dockerfile
FROM ubuntu:24.04
RUN apt-get update && apt-get install -y \
    curl git nano make gcc build-essential jq screen \
    ca-certificates gcc unzip lz4 wget bison software-properties-common \
    && apt-get clean

RUN mkdir -p /root/.local/share/node_info
COPY node_backup/. /root/.local/share/node_info/
COPY infera_node /usr/local/bin/infera_node
RUN chmod +x /usr/local/bin/infera_node
CMD ["infera_node"]
EOF

  docker build -t infera-node .
  docker run -d --name infera-node --network="host" --restart unless-stopped infera-node
  
  echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –Ω–æ–¥—ã..."
  sleep 15
  
  # –®–∞–≥ 3: –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –Ω–æ–¥—É
  echo "üîó –ü—Ä–∏–≤—è–∑–∫–∞ –Ω–æ–¥—ã –∫ –∞–∫–∫–∞—É–Ω—Ç—É"
  echo "------------------------"
  echo "1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ https://infera.org"
  echo "2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–∞—à Account ID –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞"
  echo "3. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É 'Link CLI node' –Ω–∞ —Å–∞–π—Ç–µ"
  echo -e "\n"
  
  read -p "–í—Å—Ç–∞–≤—å—Ç–µ –ø–æ–ª–Ω—É—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –Ω–æ–¥—ã: " link_command
  
  echo "üîÑ –í—ã–ø–æ–ª–Ω—è—é –ø—Ä–∏–≤—è–∑–∫—É –Ω–æ–¥—ã..."
  eval "$link_command"
  
  echo -e "\nüîç –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–≤—è–∑–∫–∏..."
  sleep 5
  curl -s http://localhost:11025/node_details | jq
  
  # –®–∞–≥ 4: –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é —Å —Ç–µ–º–∏ –∂–µ –∫–ª—é—á–∞–º–∏
  echo "üîÑ –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é..."
  docker stop infera-node
  docker rm infera-node
  docker rmi infera-node
  
  wget -O infera "https://drive.google.com/uc?id=1VSeI8cXojdh78H557SQJ9LfnnaS96DT-&export=download&confirm=yes"
  chmod +x infera
  
  cat > Dockerfile << EOF
FROM ubuntu:24.04
RUN apt-get update && apt-get install -y \
    curl git nano make gcc build-essential jq screen \
    ca-certificates gcc unzip lz4 wget bison software-properties-common \
    && apt-get clean

RUN mkdir -p /root/.local/share/node_info
COPY node_backup/. /root/.local/share/node_info/
COPY infera /usr/local/bin/infera
RUN chmod +x /usr/local/bin/infera

CMD ["infera"]
EOF

  docker build -t infera-node .
  docker run -d \
    --name infera-node \
    --network="host" \
    --restart unless-stopped \
    infera-node
  
  echo "‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω!"
  echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞..."
  sleep 15
  
  echo -e "\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å:"
  curl -s http://localhost:11025/node_details | jq
  
  rm -rf node_backup
}

update_node() {
  echo "–ù–∞—á–∏–Ω–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–¥—ã..."
  docker stop infera-node && docker rm infera-node
  docker rmi infera-node
  download_node
}

delete_node() {
  read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É? (–Ω–∞–∂–º–∏—Ç–µ y –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è): " confirm
  if [[ "$confirm" == "y" ]]; then
    echo "–£–¥–∞–ª—è—é –Ω–æ–¥—É..."
    docker stop infera-node && docker rm infera-node
    docker rmi infera-node
    rm -f infera Dockerfile
    echo "–ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞."
  else
    echo "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."
  fi
}

check_auto_restart() {
  if crontab -l | grep -q "docker restart infera-node"; then
    echo "‚úÖ –ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∞–∫—Ç–∏–≤–µ–Ω"
    echo "üïê –¢–µ–∫—É—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:"
    crontab -l | grep "docker restart infera-node"
    
    current_minute=$(date +%M)
    minutes_left=$((120 - (current_minute % 120)))
    hours_left=$((minutes_left / 60))
    mins_left=$((minutes_left % 60))
    
    echo "‚è≥ –°–ª–µ–¥—É—é—â–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑: ${hours_left}—á ${mins_left}–º–∏–Ω"
  else
    echo "‚ùå –ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
  fi
}

exit_from_script() {
  exit 0
}

while true; do
  echo -e "\n\n–ú–µ–Ω—é:"
  echo "1. üå± –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
  echo "2. üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∫–æ–ª—å–∫–æ –ø–æ–∏–Ω—Ç–æ–≤"
  echo "3. üìÇ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ"
  echo "4. üï∏Ô∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏"
  echo "5. üç¥ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–¥—É"
  echo "6. üîÑ –û–±–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
  echo "7. ‚ùå –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É"
  echo "8. ‚è∞ –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ-–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ (–∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞)"
  echo "9. üö´ –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ-–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
  echo "10. üìã –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ-–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞"
  echo "11. üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å ID –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é"
  echo "12. üö™ –í—ã–π—Ç–∏ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞"
  
  read -p "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: " choice

  case $choice in
    1)
      download_node
      ;;
    2)
      check_points
      ;;
    3)
      watch_secrets
      ;;
    4)
      check_logs
      ;;
    5)
      restart_node
      ;;
    6)
      update_node
      ;;
    7)
      delete_node
      ;;
    8)
      setup_auto_restart
      ;;
    9)
      disable_auto_restart
      ;;
    10)
      check_auto_restart
      ;;
    11)
      link_and_downgrade
      ;;
    12)
      exit_from_script
      ;;
    *)
      echo "–ù–µ–≤–µ—Ä–Ω—ã–π –ø—É–Ω–∫—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ü–∏—Ñ—Ä—É –≤ –º–µ–Ω—é."
      ;;
  esac
done
